name: Update Stats

on:
  schedule:
    - cron: '* 0 * * 4'
  workflow_dispatch:

env:             
  ECS_SERVICE: ${{ secrets.ECR_SERVICE_NAME }}               
  ECS_CLUSTER: ${{ secrets.ECR_CLUSTER_NAME }}              
  CONTAINER_NAME: ${{ secrets.ECR_CONTAINER_NAME }} 

permissions:
  id-token: write
  contents: read 
  
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Checkout this repo
      uses: actions/checkout@v3


    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ secrets.AWS_ROLE }}
        aws-region: ${{ secrets.MY_AWS_REGION }}
        role-session-name: "GitHubActions-Deploy-DynamoDbStack"


    - name: Scrape Data and Update Stats
      run: |
        make updateStats
        make getData
        

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
      run: |
          cd scripts/app
          aws ecr get-login-password --region ${{ secrets.MY_AWS_REGION }} | docker login --username ${{ secrets.AWS_ECR_USERNAME }} --password-stdin ${{ secrets.AWS_ERC_PASSWD }}
          docker build --platform="linux/amd64" -t ${{ secrets.AWS_ECR_STACK_NAME }} . --no-cache
          docker tag ${{ secrets.AWS_ECR_IMAGE }} ${{ secrets.AWS_ECR_IMAGE_TAG }}
          docker push ${{ secrets.AWS_ECR_PUSH }}
          aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE --force-new-deployment
